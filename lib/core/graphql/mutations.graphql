mutation Login($password: String!, $username: String) {
  login(password: $password, username: $username) {
    restToken
    token
    user {
      id
      username
    }
  }
}

mutation Register(
  $displayName: String
  $dob: Date
  $email: String!
  $firstName: String!
  $lastName: String!
  $password1: String!
  $password2: String!
  $username: String!
) {
  register(
    displayName: $displayName
    dob: $dob
    email: $email
    firstName: $firstName
    lastName: $lastName
    password1: $password1
    password2: $password2
    username: $username
  ) {
    success
    errors
  }
}

mutation Logout {
  logout {
    message
  }
}

mutation TokenAuth($email: String, $password: String!, $username: String!) {
  tokenAuth(email: $email, password: $password, username: $username) {
    token
    payload
    refreshExpiresIn
  }
}

mutation CreateProduct(
  $category: Int!
  $condition: ConditionEnum
  $description: String!
  $imageUrl: [ImagesInputType]!
  $price: Float!
  $size: Int
  $name: String!
  $parcelSize: ParcelSizeEnum
  $discount: Float
  $color: [String]
  $brand: Int
  $materials: [Int]
  $style: StyleEnum
  $customBrand: String
  $isFeatured: Boolean
) {
  createProduct(
    category: $category
    condition: $condition
    description: $description
    imagesUrl: $imageUrl
    price: $price
    size: $size
    name: $name
    parcelSize: $parcelSize
    discount: $discount
    color: $color
    brand: $brand
    materials: $materials
    style: $style
    customBrand: $customBrand
    isFeatured: $isFeatured
  ) {
    success
    message
  }
}

mutation likeProduct($productId: Int!) {
  likeProduct(productId: $productId) {
    success
  }
}

mutation UpdateProduct(
  $category: Int
  $condition: ConditionEnum
  $description: String
  $discount: Float
  $name: String
  $parcelSize: ParcelSizeEnum
  $price: Float
  $productId: Int!
  $size: Int
  $color: [String]
  $brand: Int
  $materials: [Int]
  $style: StyleEnum
  $customBrand: String
  $isFeatured: Boolean
) {
  updateProduct(
    category: $category
    condition: $condition
    description: $description
    discountPrice: $discount
    name: $name
    parcelSize: $parcelSize
    price: $price
    productId: $productId
    size: $size
    color: $color
    brand: $brand
    materials: $materials
    style: $style
    customBrand: $customBrand
    isFeatured: $isFeatured
  ) {
    success
    message
  }
}

mutation DeleteProduct($productId: Int!) {
  deleteProduct(productId: $productId) {
    success
    message
  }
}

mutation UpdateProfile(
  $bio: String
  $country: String
  $displayName: String
  $dob: Date
  $firstName: String
  $gender: String
  $lastName: String
  $otp: String
  $phoneNumber: PhoneInputType
  $postCode: String
  $profilePicture: ProfilePictureInputType
  $use2fa: Boolean
  $username: String
  $location: LocationInputType
  $fcmToken: String
  $isVacationMode: Boolean
) {
  updateProfile(
    bio: $bio
    country: $country
    displayName: $displayName
    dob: $dob
    firstName: $firstName
    gender: $gender
    lastName: $lastName
    otp: $otp
    phoneNumber: $phoneNumber
    postcode: $postCode
    profilePicture: $profilePicture
    use2fa: $use2fa
    username: $username
    location: $location
    fcmToken: $fcmToken
    isVacationMode: $isVacationMode
  ) {
    message
  }
}

mutation followUser($followedId: Int!) {
  followUser(followedId: $followedId) {
    success
  }
}

mutation unfollowUser($followedId: Int!) {
  unfollowUser(followedId: $followedId) {
    success
  }
}

mutation UploadFile($files: [Upload]!, $fileType: FileTypeEnum!) {
  upload(files: $files, filetype: $fileType) {
    baseUrl
    data
  }
}

mutation CreateChat($recipient: String!) {
  createChat(recipient: $recipient) {
    chat {
      id
      name
      disableResponse
      createdAt
      lastModified
      participant1Deleted
      participant2Deleted
      unreadMessagesCount
      recipient {
        id
        username
        displayName
        profilePictureUrl
        thumbnailUrl
      }
      lastMessage {
        id
        text
        attachment
        attachmentType
        sender {
          id
          username
          profilePictureUrl
          thumbnailUrl
          displayName
        }
      }
    }
  }
}

mutation DeleteMessage($messageId: Int!) {
  deleteMessage(messageId: $messageId) {
    message
  }
}

mutation DeleteSearchHistory($searchId: ID, $clearAll: Boolean) {
  deleteSearchHistory(searchId: $searchId, clearAll: $clearAll) {
    message
    success
  }
}

mutation createOffer($offerPrice: Float!, $productId: Int!, $message: String) {
  createOffer(offerPrice: $offerPrice, productId: $productId, message: $message) {
    message
    success
    data{
      conversationId
      offer {
        id
        message
        offerPrice
        createdBy {
          id
          username
          profilePictureUrl
          thumbnailUrl
          displayName
        }
        status
        createdAt
        updatedAt
        expiresAt
        deleted
        children {
          id
          updatedBy
          updatedAt
          message
          offerPrice
          status
          buyer {
            id
            username
            profilePictureUrl
            thumbnailUrl
            displayName
          }
          product {
            seller {
              id
              username
              profilePictureUrl
              thumbnailUrl
              displayName
            }
          }
        }
        buyer {
          id
          username
          profilePictureUrl
          thumbnailUrl
          displayName
        }
        product {
          id
          name
          description
          isFeatured
          userLiked
          imagesUrl
          brand {
            id
            name
          }
          category {
            id
            name
          }
          size {
            id
            name
          }
          seller {
            id
            username
            profilePictureUrl
          }
          condition
          discountPrice
          condition
          price
          parcelSize
          views
          likes
        }
      }
    }
  }
}

mutation RespondToOffer($action: OfferActionEnum!, $offerId: Int!, $offerPrice: Float) {
  respondToOffer(action: $action, offerId: $offerId, offerPrice: $offerPrice) {
    message
    success
    data{
      conversationId
      offer {
        id
        message
        offerPrice
        status
        createdAt
        updatedAt
        expiresAt
        deleted
        children {
          id
          updatedBy
          updatedAt
          message
          offerPrice
          status
          buyer {
            id
            username
            profilePictureUrl
            thumbnailUrl
            displayName
          }
          product {
            seller {
              id
              username
              profilePictureUrl
              thumbnailUrl
              displayName
            }
          }
        }
        buyer {
          id
          username
          profilePictureUrl
          thumbnailUrl
          displayName
        }
        product {
          id
          name
          description
          isFeatured
          userLiked
          imagesUrl
          brand {
            id
            name
          }
          category {
            id
            name
          }
          size {
            id
            name
          }
          seller {
            id
            username
            profilePictureUrl
          }
          condition
          discountPrice
          condition
          price
          parcelSize
          views
          likes
        }
      }
    }
  }
}


mutation DeleteConversation($conversationId: Int!) {
  deleteConversation(conversationId: $conversationId) {
    message
  }
}

mutation ArchiveConversation($conversationId: Int!) {
  archiveConversation(conversationId: $conversationId) {
    message
  }
}

mutation UnArchiveConversation($conversationId: Int!) {
  unarchiveConversation(conversationId: $conversationId) {
    message
  }
}

mutation UpdateReadMessages($messageIds: [Int]!) {
  updateReadMessages(messageIds: $messageIds) {
    success
  }
}

mutation ReadNotification($notificationId: Int) {
  readNotification(notificationId: $notificationId) {
    success
  }
}

mutation DeleteNotification($notificationId: Int!) {
  deleteNotification(notificationId: $notificationId) {
    success
  }
}

mutation UpdateNotificationPreference(
  $emailNotification: NotificationsPreferenceInputType
  $inappNotification: NotificationsPreferenceInputType
  $isEmailNotification: Boolean!
  $isPushNotification: Boolean!
  $isSilentModeOn: Boolean!
) {
  updateNotificationPreference(
    emailNotifications: $emailNotification
    inappNotifications: $inappNotification
    isEmailNotification: $isEmailNotification
    isPushNotification: $isPushNotification
    isSilentModeOn: $isSilentModeOn
  ) {
    success
    notificationPreference {
      user {
        id
        username
      }
      isPushNotification
      isEmailNotification
      inappNotifications
      emailNotifications
    }
  }
}

mutation CreateOrder($productId: Int!, $quantity: Int) {
  createOrder(productId: $productId, quantity: $quantity) {
    order {
      id
      quantity
      priceTotal
      shippingFee
      status
      createdAt
      updatedAt
    }
  }
}

mutation CancelOrder($orderId: Int!) {
  cancelOrder(orderId: $orderId) {
    success
  }
}

mutation CreatePaymentIntent(
  $orderId: Int!
  $paymentMethod: PaymentMethodEnum!
) {
  createPaymentIntent(orderId: $orderId, paymentMethod: $paymentMethod) {
    clientSecret
    paymentRef
  }
}

mutation ConfirmPayment($paymentRef: String!) {
  confirmPayment(paymentRef: $paymentRef) {
    paymentStatus
  }
}
mutation PasswordReset(
  $newpassword: String!
  $email: String!
  $token: String!
) {
  passwordReset(password: $newpassword, email: $email, code: $token) {
    message
  }
}

mutation ResetPassword($email: String) {
  resetPassword(email: $email) {
    message
  }
}

mutation ChangeEmail($email: String) {
  changeEmail(email: $email) {
    message
  }
}

mutation VerifyEmail($code: String!, $email: String!) {
  verifyEmail(code: $code, email: $email) {
    token
    restToken
    user {
      username
    }
  }
}
