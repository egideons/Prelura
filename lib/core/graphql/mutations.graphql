mutation Login($password: String!, $username: String) {
  login(password: $password, username: $username) {
    restToken
    token
    user {
      id
      username
    }
  }
}

mutation Register(
  $displayName: String
  $dob: Date
  $email: String!
  $firstName: String!
  $lastName: String!
  $password1: String!
  $password2: String!
  $username: String!
) {
  register(
    displayName: $displayName
    dob: $dob
    email: $email
    firstName: $firstName
    lastName: $lastName
    password1: $password1
    password2: $password2
    username: $username
  ) {
    success
    errors
  }
}

mutation Logout {
  logout {
    message
  }
}

mutation TokenAuth($email: String, $password: String!, $username: String!) {
  tokenAuth(email: $email, password: $password, username: $username) {
    token
    payload
    refreshExpiresIn
  }
}

mutation CreateProduct(
  $category: Int!
  $condition: ConditionEnum
  $description: String!
  $imageUrl: [ImagesInputType]!
  $price: Float!
  $size: SizeEnum
  $subCategory: Int!
  $name: String!
  $parcelSize: ParcelSizeEnum
  $discount: Float
  $color: [String]
  $brand: Int
  $materials: [Int]
) {
  createProduct(
    category: $category
    condition: $condition
    description: $description
    imagesUrl: $imageUrl
    price: $price
    size: $size
    subCategory: $subCategory
    name: $name
    parcelSize: $parcelSize
    discount: $discount
    color: $color
    brand: $brand
    materials: $materials
  ) {
    success
    message
  }
}

mutation likeProduct($productId: Int!) {
  likeProduct(productId: $productId) {
    success
  }
}

mutation UpdateProduct(
  $category: Int
  $condition: ConditionEnum
  $description: String
  $discount: Float
  $name: String
  $parcelSize: ParcelSizeEnum
  $price: Float
  $productId: Int!
  $size: SizeEnum
  $subCategory: Int
  $color: [String]
  $brand: Int
  $materials: [Int]
) {
  updateProduct(
    category: $category
    condition: $condition
    description: $description
    discount: $discount
    name: $name
    parcelSize: $parcelSize
    price: $price
    productId: $productId
    size: $size
    subCategory: $subCategory
    color: $color
    brand: $brand
    materials: $materials
  ) {
    success
    message
  }
}

mutation DeleteProduct($productId: Int!) {
  deleteProduct(productId: $productId) {
    success
    message
  }
}

mutation UpdateProfile(
  $bio: String
  $country: String
  $displayName: String
  $dob: Date
  $firstName: String
  $gender: String
  $lastName: String
  $otp: String
  $phoneNumber: PhoneInputType
  $postCode: String
  $profilePictureUrl: String
  $thumbnailUrl: String
  $use2fa: Boolean
  $username: String
) {
  updateProfile(
    bio: $bio
    country: $country
    displayName: $displayName
    dob: $dob
    firstName: $firstName
    gender: $gender
    lastName: $lastName
    otp: $otp
    phoneNumber: $phoneNumber
    postcode: $postCode
    profilePictureUrl: $profilePictureUrl
    thumbnailUrl: $thumbnailUrl
    use2fa: $use2fa
    username: $username
  ) {
    message
  }
}
