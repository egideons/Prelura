mutation Login($password: String!, $username: String) {
  login(password: $password, username: $username) {
    restToken
    token
    user {
      id
      username
    }
  }
}

mutation Register(
  $displayName: String
  $dob: Date
  $email: String!
  $firstName: String!
  $lastName: String!
  $password1: String!
  $password2: String!
  $username: String!
) {
  register(
    displayName: $displayName
    dob: $dob
    email: $email
    firstName: $firstName
    lastName: $lastName
    password1: $password1
    password2: $password2
    username: $username
  ) {
    success
    errors
  }
}

mutation Logout {
  logout {
    message
  }
}

mutation TokenAuth($email: String, $password: String!, $username: String!) {
  tokenAuth(email: $email, password: $password, username: $username) {
    token
    payload
    refreshExpiresIn
  }
}

mutation CreateProduct(
  $category: Int
  $condition: ConditionEnum
  $description: String!
  $imageUrl: [ImagesInputType]
  $price: Float!
  $size: SizeEnum
  $subCategory: Int
  $title: String!
  $parcelSize: ParcelSizeEnum
  $discount: Float
) {
  createProduct(
    category: $category
    condition: $condition
    description: $description
    imagesUrl: $imageUrl
    price: $price
    size: $size
    subCategory: $subCategory
    title: $title
    parcelSize: $parcelSize
    discount: $discount
  ) {
    success
    message
  }
}
